{"version":3,"sources":["topMenu/topMenu.js","container/main/card.js","img/author.png","img/book.png","container/main/main.js","store/redusers/booksRedus.js","img/noimg.jpg","container/books/modals/view.js","container/books/modals/fileBase.js","container/books/modals/edit.js","container/books/modals/delete.js","container/books/modals/push.js","container/books/books.js","store/redusers/authorRedus.js","container/author/modals/view.js","container/author/modals/edit.js","container/author/modals/delete.js","container/author/modals/push.js","container/author/author.js","container/container.js","store/actions/actionsBook.js","App.js","reportWebVitals.js","store/store.js","index.js"],"names":["topMenu","className","to","type","id","memo","card","img","alt","src","main","author","book","list","localStorage","JSON","parse","getItem","books","ADD_BOOKS","DELETE_BOOKS","PUSH_BOOKS","EDIT_BOOKS","View","useState","show","setShow","handleClose","Button","variant","onClick","Modal","onHide","Header","closeButton","Title","Body","image","noimage","title","last_name","first_name","created_at","Footer","FileBase","setBooks","multiple","onDone","files","state","base64","bind","getBooks","dispatch","useDispatch","useSelector","listBooks","onSubmit","e","map","item","key","preventDefault","htmlFor","value","onChange","target","pattern","author_id","selected","Delete","deleteBook","Push","Date","now","for","placeholder","required","Books","dispach","booksList","serchAuthor","result","find","undefined","book_id","length","scope","ADD_AUTHOR","DELETE_AUTHOR","PUSH_AUTHOR","EDIT_AUTHOR","authorList","getAuthor","setAuthor","deleteAuthor","Author","deleteAuthorFN","container","exact","path","component","Main","fetch","headers","then","response","json","App","useEffect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Reduser","combineReducers","action","filter","oldState","serialisedState","err","loadState","store","createStore","composeWithDevTools","applyMiddleware","thunk","subscribe","stringify","getState","setItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.327f51ea.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\"\r\nimport {memo} from 'react'\r\nconst topMenu = () => {\r\n    return (\r\n        <>\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <div className=\"container-fluid\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">библиотека</Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><span className=\"navbar-toggler-icon\"></span></button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav mr-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Главная страница</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link active\" aria-current=\"page\" to=\"books\">Книги</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link active\" aria-current=\"page\" to=\"author\">Авторы</Link>\r\n                            </li>\r\n                        </ul>\r\n                            \r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(topMenu)","const card =({img, alt}) =>{\r\n    return( <>\r\n                <div className=\"w-70 m-3\">\r\n                    <img src={img} className=\"card-img-top\" alt={alt} />\r\n                </div>  \r\n            </>)\r\n}\r\n\r\nexport default card;","export default __webpack_public_path__ + \"static/media/author.7410030a.png\";","export default __webpack_public_path__ + \"static/media/book.bb8c8f23.png\";","import Card from \"./card\";\r\nimport author from '../../img/author.png'\r\nimport book from '../../img/book.png'\r\nimport { Link } from \"react-router-dom\";\r\nimport {memo} from 'react'\r\nconst main = () => {\r\n    return (<>\r\n        <div className=\"row justify-content-md-center align-items-center\">\r\n            <Link to=\"books\" className=\"col\"><Card img={author} alt=\"Авторы\" /></Link>\r\n            <Link to=\"author\" className=\"col\"><Card img={book} alt=\"Книги\" /> </Link>\r\n        </div>\r\n    </>)\r\n}\r\n\r\nexport default memo(main);","const list = (localStorage[\"app_state\"])?JSON.parse(localStorage.getItem(\"app_state\")).books:{ books:[] }\r\nconst ADD_BOOKS = \"ADD_BOOKS\"\r\nconst DELETE_BOOKS = \"DELETE_BOOKS\"\r\nconst PUSH_BOOKS = \"PUSH_BOOKS\"\r\nconst EDIT_BOOKS = \"EDIT_BOOKS\"\r\nexport const booksReduse = (state = list,action)=>{\r\n    switch(action.type){\r\n        case ADD_BOOKS:\r\n            return {books:[...action.state]}\r\n        case EDIT_BOOKS:\r\n            return {books:[...action.state]}\r\n        case DELETE_BOOKS:\r\n            return {...state,books:[...state.books.filter(item=>action.state!=item.id)]}\r\n        case PUSH_BOOKS:\r\n            return {...state,books:[...state.books,action.state]}\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const addBooks = (state)=>({type:ADD_BOOKS,state})\r\nexport const editBooks = (state)=>({type:EDIT_BOOKS,state})\r\nexport const deleteBooks = (state)=>({type:DELETE_BOOKS,state})\r\nexport const pushBooks = (state)=>({type:PUSH_BOOKS,state})","export default __webpack_public_path__ + \"static/media/noimg.131b87eb.jpg\";","import { useState } from \"react\";\r\nimport { Button,Modal} from 'react-bootstrap';\r\nimport noimage from '../../../img/noimg.jpg'\r\nconst View = ({books,author}) => {\r\n     \r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n     \r\n    return (\r\n      <>\r\n        <Button variant=\"primary m-1\" onClick={handleShow}>\r\n          Просмотр\r\n        </Button>\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Окно просмотра</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n              <div className=\"row\">\r\n                  <div className=\"col-6\">\r\n                      <img src={books.image == \"\"? noimage : books.image} className=\"w-100\"/>\r\n                  </div>\r\n                  <div className=\"col-6\">\r\n                      <p><b>Название</b> \"{books.title}\" </p>\r\n                      <p><b>Автор</b> {author.last_name} {author.first_name} </p>\r\n                      <p><b>Релиз</b> {books.created_at} </p>\r\n                  </div>\r\n              </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Закрыть\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n}\r\nexport default View;","import FileBase64 from 'react-file-base64';\r\nconst FileBase = ({ setBooks }) => {\r\n\r\n  function getFiles(files) {\r\n    setBooks((state) => ({ ...state, image: files.base64 }))\r\n  }\r\n  return (\r\n    <FileBase64\r\n      multiple={false}\r\n      onDone={getFiles.bind(this)} />\r\n  )\r\n}\r\n\r\nexport default FileBase;\r\n\r\n\r\n\r\n","import { useState } from \"react\";\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { editBooks } from \"../../../store/redusers/booksRedus\";\r\nimport FileBase from './fileBase'\r\nconst View = ({ books }) => {\r\n\r\n    const [show, setShow] = useState(false)\r\n    const handleClose = () => setShow(false)\r\n    const handleShow = () => setShow(true)\r\n    const [getBooks, setBooks] = useState(books)\r\n    const dispatch = useDispatch()\r\n    const author = useSelector(state => state.author.author)\r\n    const listBooks = useSelector(state => state.books.books)\r\n    const onSubmit = (e) => {\r\n\r\n        listBooks.map((item, key) => {\r\n            if (item.id === getBooks.id) {\r\n                listBooks[key] = getBooks\r\n            }\r\n        })\r\n        dispatch(editBooks(listBooks))\r\n\r\n        e.preventDefault()\r\n        handleClose()\r\n    }\r\n    return (\r\n        <>\r\n            <Button variant=\"primary m-1\" onClick={handleShow}>\r\n                Редактировать\r\n            </Button>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Окно редактирования</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <form onSubmit={onSubmit}>\r\n                        <div className=\"form-group m-1\">\r\n                            <label htmlFor=\"exampleInputTitle\">Название книги</label>\r\n                            <input type=\"text\"\r\n                                className=\"form-control\"\r\n                                value={getBooks.title}\r\n                                onChange={(e) => setBooks({ ...getBooks, title: e.target.value })}\r\n                                id=\"exampleInputTitle\"\r\n                                pattern=\"[A-Za-zА-Яа-яЁё]{3,15}\" />\r\n                        </div>\r\n                        <div className=\"form-group m-1\">\r\n                            <label htmlFor=\"exampleFormControlSelect1\">Автор</label>\r\n                            <select className=\"form-control\" onChange={(e) => setBooks({ ...getBooks, author_id: e.target.value })} id=\"exampleFormControlSelect1\">\r\n                                {author.map((item, key) => (\r\n                                    item.id == getBooks.id ?\r\n                                        <option key={key} selected value={item.id}>{item.last_name} {item.first_name}</option>\r\n                                        :\r\n                                        <option key={key} value={item.id}>{item.last_name} {item.first_name}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-group m-1\">\r\n                            <label htmlFor=\"exampleInputTitle\">Дата публикации</label>\r\n                            <input type=\"date\" className=\"form-control\" value={getBooks.created_at} onChange={(e) => setBooks({ ...getBooks, created_at: e.target.value })} id=\"exampleInputTitle\" />\r\n                        </div>\r\n                        <div className=\"form-group m-2\">\r\n                            <label htmlFor=\"exampleFormControlFile1\">Обложка книги</label>\r\n                            <FileBase setBooks={setBooks} />\r\n                        </div>\r\n                        <Button variant=\"secondary\" className=\"m-2\" onClick={handleClose}>\r\n                            Закрыть\r\n                        </Button>\r\n                        <input type=\"submit\" className=\"btn btn-primary m-1\" value=\"Сохранть изменения\" />\r\n\r\n                    </form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default View;","import { useState } from \"react\";\r\nimport { Button,Modal} from 'react-bootstrap';\r\n \r\nconst Delete = ({books,deleteBook}) => {\r\n     \r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n     \r\n    return (\r\n      <>\r\n        <Button variant=\"primary btn-danger m-1\" onClick={handleShow}>\r\n            Удалить\r\n        </Button>\r\n        <Modal show={show} onHide={handleClose}>\r\n         \r\n          <Modal.Body>\r\n            <h3>Вы действительно хотите удалить книгу: \"{books.title}\"?</h3>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Отмена\r\n            </Button>\r\n            <Button variant=\"secondary\" onClick={()=>deleteBook(books.id)}>\r\n              Удалить\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n}\r\nexport default Delete;","import { useState } from \"react\";\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { pushBooks } from \"../../../store/redusers/booksRedus\";\r\nimport FileBase from './fileBase'\r\nconst Push = () => {\r\n\r\n    const [show, setShow] = useState(false)\r\n    const handleClose = () => setShow(false)\r\n    const handleShow = () => setShow(true)\r\n    const [getBooks, setBooks] = useState({})\r\n    const dispatch = useDispatch()\r\n    const author = useSelector(state => state.author.author)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        dispatch(pushBooks({...getBooks, id: Date.now()}))\r\n        handleClose()\r\n    }\r\n    return (\r\n        <>\r\n            <Button variant=\"primary m-1\" onClick={handleShow}>\r\n                Добавить книгу\r\n            </Button>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Окно добавления</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <form onSubmit={onSubmit}>\r\n                        <div className=\"form-group m-1\">\r\n                            <label for=\"exampleInputTitle\">Название книги</label>\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                onChange={(e) => setBooks({ ...getBooks, title: e.target.value })}\r\n                                placeholder=\"Ведите наименование\"\r\n                                id=\"exampleInputTitle\"\r\n                                pattern=\"[A-Za-zА-Яа-яЁё]{3,15}\" />\r\n                        </div>\r\n                        <div className=\"form-group m-1\">\r\n                            <label for=\"exampleFormControlSelect1\">Автор</label>\r\n                            <select \r\n                                className=\"form-control\"\r\n                                onChange={(e) => setBooks({ ...getBooks, author_id: e.target.value })} \r\n                                id=\"exampleFormControlSelect1\"\r\n                                required\r\n                                >\r\n                                <option value=\"\">Выберите автора</option>\r\n                                    {author.map((item, key) => (\r\n                                        <option key={key} value={item.id}>{item.last_name} {item.first_name}</option>\r\n                                    ))}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-group m-1\">\r\n                            <label for=\"exampleInputTitle\">Дата публикации</label>\r\n                            <input\r\n                                type=\"date\" \r\n                                className=\"form-control\" \r\n                                onChange={(e) => setBooks({ ...getBooks, created_at: e.target.value })} \r\n                                id=\"exampleInputTitle\"\r\n                                required />\r\n                        </div>\r\n                        <div className=\"form-group m-2\">\r\n                            <label for=\"exampleFormControlFile1\">Обложка книги</label>\r\n                            <FileBase setBooks={setBooks} />\r\n                        </div>\r\n                        <Button variant=\"secondary\" className=\"m-2\" onClick={handleClose}>\r\n                            Закрыть\r\n                        </Button>\r\n                        <input type=\"submit\" className=\"btn btn-primary m-1\" value=\"Добавить книгу\" />\r\n                    </form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default Push;","import { useDispatch, useSelector } from 'react-redux';\r\nimport{deleteBooks} from \"../../store/redusers/booksRedus\"\r\nimport noimage from '../../img/noimg.jpg'\r\nimport './books.css'\r\nimport View from './modals/view'\r\nimport Edit from './modals/edit'\r\nimport Delete from './modals/delete'\r\nimport Push from './modals/push'\r\nconst Books = () => {\r\n    const dispach = useDispatch();\r\n    const booksList = useSelector(state => state.books.books)\r\n    const author = useSelector(state => state.author.author)\r\n    const serchAuthor = (author_id) => {\r\n        let result = author.find(state => state.id == author_id)\r\n        if(result===undefined) return {last_name:\"\",first_name:\"\"}\r\n        return result\r\n    }\r\n\r\n    const deleteBook = (book_id)=>{\r\n        dispach(deleteBooks(book_id))\r\n    }\r\n     \r\n    if (booksList.length === 0 || author.length === 0) {\r\n        return (<h3>Загрузка...</h3>)\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"table-responsive\">\r\n                <table className=\"table table-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>обложка</th>\r\n                            <th>Наименовние</th>\r\n                            <th>Фамилия</th>\r\n                            <th>Имя</th>\r\n                            <th>Дата публикации</th>\r\n                            <th></th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {booksList.map((item, key) => (\r\n                            <tr key={key+Date.now()}>\r\n                                <th scope=\"row\"><img src={item.image === \"\" ? noimage : item.image} className=\"imgIcon\" /></th>\r\n                                <td>{item.title}</td>\r\n                                <td>{serchAuthor(item.author_id).last_name}</td>\r\n                                <td>{serchAuthor(item.author_id).first_name}</td>\r\n                                <td>{item.created_at}</td>\r\n                                <td>\r\n                                    <View books={item} author={serchAuthor(item.author_id)} />\r\n                                    <Edit books={item} />\r\n                                </td>\r\n                                <td>\r\n                                     <Delete books={item} deleteBook={deleteBook} />\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <Push />\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Books","const list = (localStorage[\"app_state\"])?JSON.parse(localStorage.getItem(\"app_state\")).author:{ author:[] }\r\nconst ADD_AUTHOR = \"ADD_AUTHOR\"\r\nconst DELETE_AUTHOR = \"DELETE_AUTHOR\"\r\nconst PUSH_AUTHOR = \"PUSH_AUTHOR\"\r\nconst EDIT_AUTHOR = \"EDIT_AUTHOR\"\r\nexport const authorReduse = (state = list,action)=>{\r\n    switch(action.type){\r\n        case ADD_AUTHOR:\r\n            return {author:[...action.state]}\r\n        case EDIT_AUTHOR:\r\n            return {author:[...action.state]}\r\n        case DELETE_AUTHOR:\r\n            return {...state,author:[...state.author.filter(item=>action.state!==item.id)]}\r\n        case PUSH_AUTHOR:\r\n            return {...state,author:[...state.author,action.state]}\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const addAuthor = (state)=>({type:ADD_AUTHOR,state})\r\nexport const editAuthor = (state)=>({type:EDIT_AUTHOR,state})\r\nexport const deleteAuthor = (state)=>({type:DELETE_AUTHOR,state})\r\nexport const pushAuthor = (state)=>({type:PUSH_AUTHOR,state})","import { useState } from \"react\";\r\nimport { Button,Modal} from 'react-bootstrap';\r\nconst View = ({author}) => {\r\n     \r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n     \r\n    return (\r\n      <>\r\n        <Button variant=\"primary m-1\" onClick={handleShow}>\r\n          Просмотр\r\n        </Button>\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Окно просмотра</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n              <div className=\"row\">\r\n                  <div className=\"col\">\r\n                      <p><b>Фамилия</b> {author.last_name}</p>\r\n                      <p><b>Имя</b>  {author.first_name} </p>\r\n                  </div>\r\n              </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Закрыть\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n}\r\nexport default View;","import { useState } from \"react\";\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { editAuthor } from \"../../../store/redusers/authorRedus\";\r\n \r\nconst View = ({author}) => {\r\n    const authorList = useSelector(state => state.author.author)\r\n    const [show, setShow] = useState(false)\r\n    const handleClose = () => setShow(false)\r\n    const handleShow = () => setShow(true)\r\n    const [getAuthor, setAuthor] = useState(author)\r\n    const dispatch = useDispatch()\r\n   \r\n    const onSubmit=(e)=>{\r\n         e.preventDefault()\r\n         authorList.map((item,key)=>{\r\n            if(item.id===getAuthor.id){\r\n                authorList[key] = getAuthor\r\n            }\r\n        })\r\n        dispatch(editAuthor(authorList))\r\n        handleClose()\r\n    }\r\n    return (\r\n        <>\r\n            <Button variant=\"primary m-1\" onClick={handleShow}>\r\n                Редактировать\r\n            </Button>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Окно редактирования</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <form onSubmit={onSubmit}>\r\n                        <div className=\"form-group m-1\">\r\n                            <label htmlFor=\"exampleInputLast\">Фамилия</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                value={getAuthor.last_name}\r\n                                onChange={(e) => setAuthor({ ...getAuthor, last_name: e.target.value })}\r\n                                \r\n                                pattern=\"[A-Za-zА-Яа-яЁё]{3,15}\"/>\r\n                        </div>\r\n                        <div className=\"form-group m-1\">\r\n                            <label htmlFor=\"exampleInputTitle\">Имя</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                value={getAuthor.first_name}\r\n                                onChange={(e) => setAuthor({ ...getAuthor, first_name: e.target.value })}\r\n                                 \r\n                                pattern=\"[A-Za-zА-Яа-яЁё]{3,15}\"\r\n                            />\r\n                        </div>\r\n                        <Button variant=\"secondary\" className=\"m-2\" onClick={handleClose}>\r\n                             Закрыть\r\n                        </Button>\r\n                        <input type=\"submit\" className=\"btn btn-primary m-1\" value=\"Сохранть изменения\" />\r\n                    </form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default View;","import { useState } from \"react\";\r\nimport { Button,Modal} from 'react-bootstrap';\r\n \r\nconst Delete = ({author,deleteAuthor}) => {\r\n     \r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n     \r\n    return (\r\n      <>\r\n        <Button variant=\"primary btn-danger m-1\" onClick={handleShow}>\r\n            Удалить\r\n        </Button>\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Body>\r\n            <h3>Вы действительно хотите удалить автора: \"{author.last_name} {author.first_name}\"?</h3>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}> \r\n              Отмена\r\n            </Button>\r\n            <Button variant=\"secondary\" onClick={()=>deleteAuthor(author.id)}>\r\n              Удалить\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n}\r\nexport default Delete;","import { useState } from \"react\";\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { pushAuthor } from \"../../../store/redusers/authorRedus\";\r\n\r\nconst Push = () => {\r\n    const [show, setShow] = useState(false)\r\n    const handleClose = () => setShow(false)\r\n    const handleShow = () => setShow(true)\r\n    const [getAuthor, setAuthor] = useState({})\r\n    const dispatch = useDispatch()\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        setAuthor({ ...getAuthor, id: Date.now() })\r\n        dispatch(pushAuthor(getAuthor))\r\n        handleClose()\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <Button variant=\"primary m-1\" onClick={handleShow}>\r\n                Добавить автора\r\n            </Button>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Окно редактирования</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <form onSubmit={onSubmit}>\r\n                        <div className=\"form-group m-1\">\r\n                            <label htmlFor=\"exampleInputTitle\">Фамилия</label>\r\n                            <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            value={getAuthor.last_name}\r\n                            onChange={(e) => setAuthor({ ...getAuthor, last_name: e.target.value })}\r\n                            id=\"exampleInputTitle\"\r\n                            pattern=\"[A-Za-zА-Яа-яЁё]{3,15}\" />\r\n                        </div>\r\n                        <div className=\"form-group m-1\">\r\n                            <label htmlFor=\"exampleInputTitle\">Имя</label>\r\n                            <input type=\"text\"\r\n                            className=\"form-control\"\r\n                            value={getAuthor.first_name}\r\n                            onChange={(e) => setAuthor({ ...getAuthor, first_name: e.target.value })}\r\n                            id=\"exampleInputTitle\" \r\n                            pattern=\"[A-Za-zА-Яа-яЁё]{3,15}\"\r\n                            />\r\n                        </div>\r\n                        <Button variant=\"secondary\" className=\"m-2\" onClick={handleClose}>\r\n                            Закрыть\r\n                        </Button>\r\n                        <input type=\"submit\" className=\"btn btn-primary m-1\" value=\"Сохранть изменения\" />\r\n                    </form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Push;","import { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteAuthor } from '../../store/redusers/authorRedus'\r\nimport View from './modals/view'\r\nimport Edit from './modals/edit'\r\nimport Delete from './modals/delete'\r\nimport Push from './modals/push'\r\nconst Author = () => {\r\n    const dispach = useDispatch();\r\n    const authorList = useSelector(state => state.author.author)\r\n    const deleteAuthorFN = (id) => {\r\n        dispach(deleteAuthor(id))\r\n    }\r\n    if (authorList.length === 0) {\r\n        return (<h3>Загрузка...</h3>)\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"table-responsive\">\r\n                <table className=\"table table-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Фамилия</th>\r\n                            <th>Имя</th>\r\n                            <th></th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {authorList.map((item, key) => (\r\n                            <tr key={key + Date.now()}>\r\n                                <td>{item.last_name}</td>\r\n                                <td>{item.first_name}</td>\r\n                                <td>\r\n                                    <View author={item} />\r\n                                    <Edit author={item} />\r\n                                </td>\r\n                                <td>\r\n                                    <Delete author={item} deleteAuthor={deleteAuthorFN} />\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <Push />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Author","import Main from './main/main'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport Books from './books/books'\r\nimport Author from './author/author'\r\nimport {memo} from 'react'\r\nconst container = () => {\r\n    return (\r\n        <div className=\"container\">\r\n                <Switch>\r\n                    <Route exact path='/' component={Main} />\r\n                    <Route exact path='/author' component={Author} />\r\n                    <Route exact path='/books' component={Books} />\r\n                </Switch>\r\n        </div>\r\n    )\r\n}\r\nexport default memo(container);","import {addBooks} from '../redusers/booksRedus'\r\nimport {addAuthor} from '../redusers/authorRedus'\r\nexport const getBooks = () =>{\r\n    return function(dispatch){ \r\n        fetch(\"http://localhost:3000/books.json\", {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        }).then((response) =>response.json()).then(json => {\r\n                dispatch(addBooks(json))\r\n            })\r\n    }\r\n}\r\nexport const getAuthor = () =>{\r\n    return function(dispatch){ \r\n        fetch(\"http://localhost:3000/author.json\", {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        }).then((response) =>response.json()).then(json => {\r\n                dispatch(addAuthor(json))\r\n            })\r\n    }\r\n}","\nimport './App.css';\nimport TopMenu from './topMenu/topMenu';\nimport Container from './container/container'\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport { useEffect } from 'react';\nimport { getBooks, getAuthor } from './store/actions/actionsBook'\nimport { useDispatch, useSelector} from 'react-redux';\nfunction App() {\n  const dispach = useDispatch();\n  const author = useSelector(state=>state.author.author)\n  useEffect(()=>{\n        dispach(getBooks());\n        dispach(getAuthor());\n  },[])\n \n  return (\n    <Router>\n      <TopMenu/>\n      <Container />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers, createStore,applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { booksReduse } from './redusers/booksRedus'\r\nimport { authorReduse } from './redusers/authorRedus'\r\nimport {composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nconst Reduser = combineReducers({\r\n    author:authorReduse,\r\n    books:booksReduse\r\n})\r\n \r\nconst loadState = () => {\r\n    try {  \r\n        const serialisedState = localStorage.getItem('app_state');\r\n        if (!serialisedState) return undefined;\r\n        return JSON.parse(serialisedState);\r\n    } catch (err) {\r\n        return undefined;\r\n    }\r\n};\r\nconst oldState = loadState();\r\n\r\nexport const store = createStore(Reduser,oldState,composeWithDevTools(applyMiddleware(thunk)));\r\n \r\n store.subscribe(() => { \r\n     const serialisedState = JSON.stringify(store.getState());\r\n    localStorage.setItem('app_state', serialisedState);\r\n});  \r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux'\nimport {store} from './store/store'\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}